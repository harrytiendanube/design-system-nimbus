@import "../NimbusCore/nimbus-core";

// Mixins

// Grid
//
// Defining mixins to be used by Nimbus' grid system

@mixin nimbus--make-container($breakpoints: $nimbus--grid-breakpoints) {
  @include nimbus--set-largest-breakpoint();
  margin-left: auto;
  margin-right: auto;

  @each $name, $value in $breakpoints {
    $prev-breakpoint: map-get($breakpoints, nimbus--breakpoint-prev($name));
    $margin: map-get($value, margin);

    @if $prev-breakpoint {
      $prev-margin: map-get($prev-breakpoint, margin);
      @if $prev-margin != $margin {
        @include nimbus--breakpoint($name) {
          padding-left: #{($nimbus--grid-gutter / 2) + $margin};
          padding-right: #{($nimbus--grid-gutter / 2) + $margin};
        }
      }
    } @else {
      @include nimbus--breakpoint($name) {
        padding-left: #{($nimbus--grid-gutter / 2) + $margin};
        padding-right: #{($nimbus--grid-gutter / 2) + $margin};
      }
    }
  }
}

// Get the last breakpoint width and set max-width to its value
@mixin nimbus--set-largest-breakpoint($breakpoints: $nimbus--grid-breakpoints) {
  $largest-breakpoint: last-map-item($breakpoints);

  max-width: map-get($largest-breakpoint, "width");
}

// Add in the max-widths for each breakpoint to the container
@mixin nimbus--make-container-max-widths(
  $breakpoints: $nimbus--grid-breakpoints
) {
  @each $name, $value in $breakpoints {
    @include nimbus--breakpoint($name) {
      max-width: map-get($value, width);
    }
  }
}

@mixin nimbus--make-row($gutter: $nimbus--grid-gutter) {
  display: flex;
  flex-wrap: wrap;
  margin-left: -1 * $gutter / 2;
  margin-right: -1 * $gutter / 2;
}

@mixin nimbus--make-col-ready($gutter: $nimbus--grid-gutter) {
  padding-left: $gutter / 2;
  padding-right: $gutter / 2;
  position: relative;
  width: 100%;
}

@mixin nimbus--make-col($span, $columns) {
  @if $span == 0 {
    display: none;
  } @else {
    display: block;
    flex: 0 0 percentage($span / $columns);
    max-width: percentage($span / $columns);
  }
}

@mixin nimbus--make-col-offset($span, $columns) {
  $offset: $span / $columns;
  @if $offset == 0 {
    margin-left: 0;
  } @else {
    margin-left: percentage($offset);
  }
}

@mixin nimbus--make-col-auto() {
  flex: 0 0 auto;
  max-width: 100%;
  width: auto;
}

@mixin nimbus--make-grid-columns(
  $breakpoints: $nimbus--grid-breakpoints,
  $gutter: $nimbus--grid-gutter
) {
  .#{$prefix}--col {
    @include nimbus--make-col-ready($gutter);
  }

  @each $breakpoint in map-keys($breakpoints) {
    $index: nimbus--breakpoint-index($breakpoint);
    $columns: map-get(map-get($breakpoints, $breakpoint), columns);

    @include nimbus--breakpoint($breakpoint, $breakpoints) {
      .#{$prefix}--col,
      .#{$prefix}--col#{$index} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }

      .#{$prefix}--col--auto,
      .#{$prefix}--col#{$index}--auto {
        flex: 1 0 0%;
        max-width: 100%;
        width: auto;
      }

      @for $i from 0 through $columns {
        .#{$prefix}--col#{$index}-#{$i} {
          @include nimbus--make-col($i, $columns);
        }
      }

      @for $i from 0 through ($columns - 1) {
        @if not($index == "") {
          .#{$prefix}--offset#{$index}-#{$i} {
            @include nimbus--make-col-offset($i, $columns);
          }
        }
      }
    }

    @for $i from 0 through $columns {
      .#{$prefix}--col#{$index}-#{$i} {
        @include nimbus--make-col-ready($gutter);
      }
    }

    .#{$prefix}--col#{$index},
    .#{$prefix}--col#{$index}--auto {
      @include nimbus--make-col-ready($gutter);
    }
  }
}

@mixin nimbus--grid(
  $breakpoints: $nimbus--grid-breakpoints,
  $grid-gutter: $nimbus--grid-gutter
) {
  @include nimbus--make-grid-columns($breakpoints, $grid-gutter);
  .#{$prefix}--grid {
    @include nimbus--make-container($breakpoints);
  }

  .#{$prefix}--row {
    @include nimbus--make-row();
  }
}
