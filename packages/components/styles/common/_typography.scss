/* stylelint-disable indentation, function-parentheses-space-inside */
// Typography
//
// Font styles for Nimbus DS

$heading-page: (
  font-family: $font-family,
  font-weight: map-get($nimbus--font-weights, "bold"),
  font-size: nimbus--rem(map-get($nimbus--title-sizes, "h1")),
  line-height:
    nimbus--rem(
      map-get($nimbus--title-sizes, "h1") *
        map-get($nimbus--line-heights, "heading")
    ),
) !default;

$heading-element: (
  font-family: $font-family,
  font-weight: map-get($nimbus--font-weights, "bold"),
  font-size: nimbus--rem(map-get($nimbus--title-sizes, "h3")),
  line-height:
    nimbus--rem(
      map-get($nimbus--title-sizes, "h3") *
        map-get($nimbus--line-heights, "heading")
    ),
) !default;

$text-featured: (
  font-family: $font-family,
  font-weight: map-get($nimbus--font-weights, "regular"),
  font-size: nimbus--rem(map-get($nimbus--title-sizes, "h1")),
  line-height:
    nimbus--rem(
      map-get($nimbus--title-sizes, "h1") *
        map-get($nimbus--line-heights, "body")
    ),
) !default;

$text-heading: (
  font-family: $font-family,
  font-weight: map-get($nimbus--font-weights, "bold"),
  font-size: nimbus--rem(map-get($nimbus--body-sizes, "base")),
  line-height:
    nimbus--rem(
      map-get($nimbus--body-sizes, "base") *
        map-get($nimbus--line-heights, "body")
    ),
) !default;

$text-body: (
  font-family: $font-family,
  font-weight: map-get($nimbus--font-weights, "regular"),
  font-size: nimbus--rem(map-get($nimbus--body-sizes, "base")),
  line-height:
    nimbus--rem(
      map-get($nimbus--body-sizes, "base") *
        map-get($nimbus--line-heights, "body")
    ),
) !default;

$text-label: (
  font-family: $font-family,
  font-weight: map-get($nimbus--font-weights, "regular"),
  font-size: nimbus--rem(map-get($nimbus--body-sizes, "small")),
  line-height:
    nimbus--rem(
      map-get($nimbus--body-sizes, "small") *
        map-get($nimbus--line-heights, "body")
    ),
) !default;

$text-label-tight: (
  font-family: $font-family,
  font-weight: map-get($nimbus--font-weights, "regular"),
  font-size: nimbus--rem(map-get($nimbus--body-sizes, "small")),
  line-height:
    nimbus--rem(
      map-get($nimbus--body-sizes, "small") *
        map-get($nimbus--line-heights, "base")
    ),
) !default;

$text-small: (
  font-family: $font-family,
  font-weight: map-get($nimbus--font-weights, "regular"),
  font-size: nimbus--rem(map-get($nimbus--body-sizes, "smaller")),
  line-height:
    nimbus--rem(
      map-get($nimbus--body-sizes, "smaller") *
        map-get($nimbus--line-heights, "base")
    ),
) !default;

$text-button: (
  font-family: $font-family,
  font-weight: map-get($nimbus--font-weights, "bold"),
  font-size: nimbus--rem(map-get($nimbus--body-sizes, "base")),
  line-height:
    nimbus--rem(
      map-get($nimbus--body-sizes, "base") *
        map-get($nimbus--line-heights, "body")
    ),
) !default;

// Map with all font values

$nimbus--type-tokens: (
  heading-page: $heading-page,
  heading-element: $heading-element,
  text-featured: $text-featured,
  text-heading: $text-heading,
  text-body: $text-body,
  text-label: $text-label,
  text-label-tight: $text-label-tight,
  text-small: $text-small,
  text-button: $text-button,
) !default;

@mixin nimbus--type($name) {
  @if not map-has-key($nimbus--type-tokens, $name) {
    @error "Type token with the name '#{$name} was not found";
  }
  $token: map-get($nimbus--type-tokens, $name);

  @each $property, $value in $token {
    #{$property}: $value;
  }
}

// Text related mixins

@mixin nimbus--text-trim($lines) {
  /* stylelint-disable-next-line property-no-vendor-prefix */
  -webkit-box-orient: vertical;
  /* stylelint-disable-next-line value-no-vendor-prefix */
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  overflow: hidden;
  text-overflow: ellipsis;
}
