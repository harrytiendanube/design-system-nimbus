@import "../../styles/core";

// Menu

$footer-height: 56px;

$menu-position-left: (
  left: 0,
  transform: translateX(-100%),
);

$menu-position-right: (
  right: 0,
  transform: translateX(100%),
);

$menu-position: (
  left: $menu-position-left,
  right: $menu-position-right,
);

.#{$prefix}--menu {
  align-items: center;
  background-color: rgba(#000, 0.5);
  display: flex;
  height: 100vh;
  justify-content: center;
  left: 0;
  opacity: 0;
  position: fixed;
  top: 0;
  transition: opacity $motion-base ease, visibility $motion-base linear;
  visibility: hidden;
  width: 100vw;
  z-index: 900;

  @each $name, $position in $menu-position {
    $token: map-get($menu-position, $name);

    &.position--#{$name} {
      .#{$prefix}--menu-wrapper {
        @each $property, $value in $token {
          #{$property}: $value;
        }
      }
    }
  }

  &.is--visible {
    opacity: 1;
    transition: opacity $motion-base ease, visibility $motion-base linear;
    visibility: visible;

    .#{$prefix}--menu-wrapper {
      opacity: 1;
      transform: translateX(0);
      transition: opacity $motion-base ease, transform $motion-base ease;
    }
  }
}

.#{$prefix}--menu-wrapper {
  @supports (padding-top: constant(safe-area-inset-top)) {
    --safe-area-inset-top: constant(safe-area-inset-top);

    padding-top: var(--safe-area-inset-top);
  }
  @supports (padding-top: env(safe-area-inset-top)) {
    --safe-area-inset-top: env(safe-area-inset-top);

    padding-top: var(--safe-area-inset-top);
  }
  background-color: $color-white;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  height: 100%;
  max-width: 260px;
  position: absolute;
  top: 0;
  transition: opacity $motion-base ease, transform $motion-base ease;
  width: 100%;
  z-index: 901;
}

.#{$prefix}--menu-header {
  flex: 0 0 auto;
  padding: $spacing-small $spacing-small $spacing-xxx-large;
}

.#{$prefix}--menu-body {
  flex: 1 1 auto;
  overflow-y: auto;
  padding: $spacing-x-small;
}

.#{$prefix}--menu-footer {
  @supports (padding-bottom: constant(safe-area-inset-bottom)) {
    --safe-area-inset-bottom: constant(safe-area-inset-bottom);

    padding-bottom: calc(var(--safe-area-inset-bottom) + #{$spacing-x-small});
  }
  @supports (padding-bottom: env(safe-area-inset-bottom)) {
    --safe-area-inset-bottom: env(safe-area-inset-bottom);

    padding-bottom: calc(var(--safe-area-inset-bottom) + #{$spacing-x-small});
  }
  flex: 0 0 auto;
  padding: $spacing-x-small;
  width: 100%;
}

.#{$prefix}--menu-section:not(:last-child) {
  margin-bottom: $spacing-medium;
}

.#{$prefix}--menu-section__title {
  margin-bottom: $spacing-x-small;
  padding: 0 $spacing-x-small;
}

.#{$prefix}--menu-item-wrapper {
  border-radius: $actions-border-radius;
}

.#{$prefix}--menu-item {
  @include nimbus--type("text-body");
  align-items: center;
  appearance: none;
  background-color: transparent;
  color: $color-secondary-pure;
  cursor: pointer;
  display: flex;
  padding: $spacing-x-small;
  transition: $motion-base ease;
  width: 100%;

  svg {
    fill: $color-secondary-pure;
    margin-right: $spacing-x-small;
  }
}

.#{$prefix}--menu-item__label {
  flex: 1 1 auto;
  text-align: left;
}

.#{$prefix}--menu-item--active {
  background-color: $color-primary-lighter;

  .#{$prefix}--menu-item {
    color: $color-primary-pure;

    svg {
      fill: $color-primary-pure;
    }
  }

  .#{$prefix}--menu-sub-item-wrapper {
    max-height: 1000px;
  }
}

.#{$prefix}--menu-sub-item-wrapper {
  display: flex;
  flex-direction: column;
  max-height: 0;
  overflow: hidden;
  transition: $motion-base ease;
}

.#{$prefix}--menu-sub-item {
  @include nimbus--type("text-body");
  appearance: none;
  background-color: transparent;
  color: $color-secondary-pure;
  cursor: pointer;
  display: flex;
  padding: $spacing-x-small $spacing-x-small $spacing-x-small $spacing-large;
  text-align: left;
  width: 100%;
}

.#{$prefix}--menu-sub-item--active {
  color: $color-primary-pure;
}
